syntax = "proto3";

option go_package = "github.com/elastic/elastic-agent-shipper/api/messages";
package elastic.agent.shipper.v1.messages;

import "google/protobuf/timestamp.proto";
import "google/rpc/status.proto";
import "messages/publish.proto";

message StreamAcksRequest {
 // Optional. Requests acknowledgements originating only from this source.
 messages.Source source = 1;
 // Optional. Requests acknowledgements for events for this data stream only.
 messages.DataStream data_stream = 2;
}

message StreamAcksReply {
 repeated Acknowledgement acks = 1;
}

message Acknowledgement {
 // Timestamp of the event being acknowledged.
 google.protobuf.Timestamp timestamp = 1;
 // ID derived from the queue offset that uniquely identifies the event within the shipper
 // system. Used to track the progress of events through the queue system.
 string queue_id = 2;
 // Optional. Event ID provided when the event was published, if it exists.
 string event_id = 3;
 // Optional. Error status indicating the message failed to send.
 google.rpc.Status error = 4;
}
